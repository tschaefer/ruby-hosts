# frozen_string_literal: true

require 'spec_helper'

require 'tempfile'

require 'hosts/file'

RSpec.describe Hosts::File do
  subject(:hostsfile) { described_class.new }

  let(:described_class) { Class.new { include Hosts::File } }

  describe '#parse_file' do
    context 'when file is not existing' do
      it 'raises an error' do
        expect { hostsfile.parse_file('/no/such/file') }.to raise_error(/No such file/)
      end
    end

    context 'when file is existing and valid' do
      let(:assert) { "#{File.dirname(__FILE__)}/data/hosts" }

      it 'returns an array with elements' do
        entries = hostsfile.parse_file(assert)

        expect(entries).to be_an(Array)
        expect(entries.size).to be(7)
        expect(entries).to include(['127.0.0.1', 'localhost', []])
      end
    end
  end

  describe '#write_file' do
    context 'when file is not existing' do
      it 'raises an error' do
        expect { hostsfile.write_file('/no/such/file', '') }.to raise_error(/No such file/)
      end
    end

    context 'when file is existing and no entries' do
      let(:tempfile) { Tempfile.new }

      it 'writes a legend line' do
        hostsfile.write_file(tempfile, '')
        expect(File.read(tempfile)).to match("# hosts(5) file generated by hostsctl(1)\n\n\n")
      end
    end
  end
end
